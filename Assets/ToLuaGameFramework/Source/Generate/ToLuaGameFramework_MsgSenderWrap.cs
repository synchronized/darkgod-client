//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ToLuaGameFramework_MsgSenderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ToLuaGameFramework.MsgSender), typeof(System.Object));
		L.RegFunction("OnInit", new LuaCSFunction(OnInit));
		L.RegFunction("SendMessage", new LuaCSFunction(SendMessage));
		L.RegFunction("OnCallback", new LuaCSFunction(OnCallback));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("Instance", new LuaCSFunction(get_Instance), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ToLuaGameFramework.MsgSender obj = (ToLuaGameFramework.MsgSender)ToLua.CheckObject<ToLuaGameFramework.MsgSender>(L, 1);
			obj.OnInit();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessage(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				ToLuaGameFramework.MsgSender obj = (ToLuaGameFramework.MsgSender)ToLua.CheckObject<ToLuaGameFramework.MsgSender>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				obj.SendMessage(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				ToLuaGameFramework.MsgSender obj = (ToLuaGameFramework.MsgSender)ToLua.CheckObject<ToLuaGameFramework.MsgSender>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				System.Action<bool,int> arg2 = (System.Action<bool,int>)ToLua.CheckDelegate<System.Action<bool,int>>(L, 4);
				obj.SendMessage(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ToLuaGameFramework.MsgSender.SendMessage");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			ToLuaGameFramework.MsgSender obj = (ToLuaGameFramework.MsgSender)ToLua.CheckObject<ToLuaGameFramework.MsgSender>(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checkinteger(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
			obj.OnCallback(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, ToLuaGameFramework.MsgSender.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

